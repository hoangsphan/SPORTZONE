{
  "openapi": "3.0.1",
  "info": {
    "title": "SportZone API",
    "description": "API cho ứng dụng SportZone - Hệ thống đặt sân thể thao",
    "version": "v1"
  },
  "paths": {
    "/get-all-account": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Lấy toàn bộ Account : Admin, Shop",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/search-users": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Search tài khoản : Admin",
        "parameters": [
          {
            "name": "Email",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Phone",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RoleId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/create-account": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Tạo tài khoản : Admin",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAccountDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAccountDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAccountDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Authentication/Login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Authentication/googlelogin": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Authentication/google-response": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Authentication/Logout": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogoutDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LogoutDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LogoutDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Authentication/ValidateToken": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Booking/CreateBooking": {
      "post": {
        "tags": [
          "Booking"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingCreateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingCreateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BookingCreateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Booking/GetBookingById/{id}": {
      "get": {
        "tags": [
          "Booking"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Booking/CancelBooking/{id}": {
      "delete": {
        "tags": [
          "Booking"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Booking/user/{userId}": {
      "get": {
        "tags": [
          "Booking"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CategoryField": {
      "get": {
        "tags": [
          "CategoryField"
        ],
        "summary": "Lấy tất cả category_field để đẩy lên homepage phần filter : Customer",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CategoryField/{id}": {
      "get": {
        "tags": [
          "CategoryField"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/CategoryField/{id}/name": {
      "get": {
        "tags": [
          "CategoryField"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Discount": {
      "get": {
        "tags": [
          "Discount"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Discount"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscountDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscountDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DiscountDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Discount/{id}": {
      "get": {
        "tags": [
          "Discount"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "Discount"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscountDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscountDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DiscountDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Discount"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Discount/facility/{facId}": {
      "get": {
        "tags": [
          "Discount"
        ],
        "parameters": [
          {
            "name": "facId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Discount/active": {
      "get": {
        "tags": [
          "Discount"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Discount/active/facility/{facId}": {
      "get": {
        "tags": [
          "Discount"
        ],
        "parameters": [
          {
            "name": "facId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Discount/search/{text}": {
      "get": {
        "tags": [
          "Discount"
        ],
        "parameters": [
          {
            "name": "text",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Facility": {
      "get": {
        "tags": [
          "Facility"
        ],
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Facility"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "UserId": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "Name": {
                    "type": "string"
                  },
                  "OpenTime": {
                    "type": "string",
                    "format": "time"
                  },
                  "CloseTime": {
                    "type": "string",
                    "format": "time"
                  },
                  "Address": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "Subdescription": {
                    "type": "string"
                  },
                  "Images": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              },
              "encoding": {
                "UserId": {
                  "style": "form"
                },
                "Name": {
                  "style": "form"
                },
                "OpenTime": {
                  "style": "form"
                },
                "CloseTime": {
                  "style": "form"
                },
                "Address": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "Subdescription": {
                  "style": "form"
                },
                "Images": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Facility/with-details": {
      "get": {
        "tags": [
          "Facility"
        ],
        "summary": "Lấy các cơ sở lên Homepage bao gồm cả search text : Customer",
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Facility/filter": {
      "get": {
        "tags": [
          "Facility"
        ],
        "summary": "Lọc cơ sở theo Category Field và địa chỉ : Customer",
        "parameters": [
          {
            "name": "categoryFieldName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Facility/{id}": {
      "get": {
        "tags": [
          "Facility"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "Facility"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "UserId"
                ],
                "type": "object",
                "properties": {
                  "UserId": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "Name": {
                    "type": "string"
                  },
                  "OpenTime": {
                    "type": "string",
                    "format": "time"
                  },
                  "CloseTime": {
                    "type": "string",
                    "format": "time"
                  },
                  "Address": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "Subdescription": {
                    "type": "string"
                  },
                  "ExistingImageUrls": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "NewImages": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              },
              "encoding": {
                "UserId": {
                  "style": "form"
                },
                "Name": {
                  "style": "form"
                },
                "OpenTime": {
                  "style": "form"
                },
                "CloseTime": {
                  "style": "form"
                },
                "Address": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "Subdescription": {
                  "style": "form"
                },
                "ExistingImageUrls": {
                  "style": "form"
                },
                "NewImages": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Facility"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Facility/by-user/{userId}": {
      "get": {
        "tags": [
          "Facility"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Facility/{facilityId}/category-field-names": {
      "get": {
        "tags": [
          "Facility"
        ],
        "parameters": [
          {
            "name": "facilityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Field": {
      "get": {
        "tags": [
          "Field"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Field/GetAllFields/Search": {
      "get": {
        "tags": [
          "Field"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Field/{id}": {
      "get": {
        "tags": [
          "Field"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "Field"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FieldUpdateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FieldUpdateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FieldUpdateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Field"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Field/facility/{facId}": {
      "get": {
        "tags": [
          "Field"
        ],
        "parameters": [
          {
            "name": "facId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Field/category/{categoryId}": {
      "get": {
        "tags": [
          "Field"
        ],
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Field/user/{userId}": {
      "get": {
        "tags": [
          "Field"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Field/{fieldId}/schedule": {
      "get": {
        "tags": [
          "Field"
        ],
        "parameters": [
          {
            "name": "fieldId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Field/Create-Field": {
      "post": {
        "tags": [
          "Field"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FieldCreateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FieldCreateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FieldCreateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/FieldBookingSchedule": {
      "get": {
        "tags": [
          "FieldBookingSchedule"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FieldBookingScheduleDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FieldBookingScheduleDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FieldBookingScheduleDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/FieldBookingSchedule/{id}": {
      "get": {
        "tags": [
          "FieldBookingSchedule"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FieldBookingScheduleDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FieldBookingScheduleDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FieldBookingScheduleDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/FieldBookingSchedule/generate": {
      "post": {
        "tags": [
          "FieldBookingSchedule"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FieldBookingScheduleGenerateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FieldBookingScheduleGenerateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FieldBookingScheduleGenerateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/FieldBookingSchedule/update-generate": {
      "put": {
        "tags": [
          "FieldBookingSchedule"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FieldBookingScheduleUpdateGenerateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FieldBookingScheduleUpdateGenerateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FieldBookingScheduleUpdateGenerateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/FieldBookingSchedule/delete-generate": {
      "delete": {
        "tags": [
          "FieldBookingSchedule"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FieldBookingScheduleDeleteGenerateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FieldBookingScheduleDeleteGenerateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FieldBookingScheduleDeleteGenerateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/FieldBookingSchedule/facility/{facilityId}/date/{date}": {
      "get": {
        "tags": [
          "FieldBookingSchedule"
        ],
        "parameters": [
          {
            "name": "facilityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FieldBookingScheduleByDateDtoServiceResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FieldBookingScheduleByDateDtoServiceResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FieldBookingScheduleByDateDtoServiceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/FieldPricing": {
      "get": {
        "tags": [
          "FieldPricing"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FieldPricingDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FieldPricingDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FieldPricingDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "FieldPricing"
        ],
        "summary": "Tạo bảng giá cho sân  : Field Owner",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FieldPricingCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FieldPricingCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FieldPricingCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FieldPricingDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FieldPricingDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FieldPricingDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/FieldPricing/{id}": {
      "get": {
        "tags": [
          "FieldPricing"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FieldPricingDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FieldPricingDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FieldPricingDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "FieldPricing"
        ],
        "summary": "Sửa bảng giá cho sân  : Field Owner",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FieldPricingUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FieldPricingUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FieldPricingUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "FieldPricing"
        ],
        "summary": "Xoá bảng giá cho sân  : Field Owner",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/FieldPricing/byField/{fieldId}": {
      "get": {
        "tags": [
          "FieldPricing"
        ],
        "summary": "Lấy giá của từng sân cho bảng giá  : Customer",
        "parameters": [
          {
            "name": "fieldId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FieldPricingDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FieldPricingDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FieldPricingDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ForgotPassword/send-code": {
      "post": {
        "tags": [
          "ForgotPassword"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/ForgotPassword/verify-code": {
      "post": {
        "tags": [
          "ForgotPassword"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyCodeDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyCodeDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyCodeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Notification/user/{userId}": {
      "get": {
        "tags": [
          "Notification"
        ],
        "summary": "Lấy tất cả notifications của user",
        "description": "Lấy danh sách tất cả notifications của user theo userId",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Notification/mark-as-read/{notificationId}": {
      "put": {
        "tags": [
          "Notification"
        ],
        "summary": "Đánh dấu notification đã đọc",
        "description": "Đánh dấu một notification cụ thể đã được đọc",
        "parameters": [
          {
            "name": "notificationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Notification/mark-all-as-read/{userId}": {
      "put": {
        "tags": [
          "Notification"
        ],
        "summary": "Đánh dấu tất cả notifications đã đọc",
        "description": "Đánh dấu tất cả notifications của user đã được đọc",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Notification/{notificationId}": {
      "delete": {
        "tags": [
          "Notification"
        ],
        "summary": "Xóa notification",
        "description": "Xóa một notification cụ thể",
        "parameters": [
          {
            "name": "notificationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Order/{orderId}": {
      "get": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Order/Order/{orderId}/Update/ContentPayment": {
      "put": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "option",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Order/Owner/{ownerId}/TotalRevenue": {
      "get": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "ownerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "facilityId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Order/owner/{ownerId}/monthlyRevenue": {
      "get": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "ownerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "facilityId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Order/owner/{ownerId}/yearlyRevenue": {
      "get": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "ownerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "facilityId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Order/owner/{ownerId}/facility-revenue": {
      "get": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "ownerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Order/schedule/{scheduleId}": {
      "get": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "scheduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Order/schedule/{scheduleId}/slot-detail": {
      "get": {
        "tags": [
          "Order"
        ],
        "parameters": [
          {
            "name": "scheduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Payment/calculate-and-pay": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Tính toán tổng tiền và tạo URL thanh toán: Customer",
        "description": "Tính toán tổng tiền từ booking data và tạo URL thanh toán VNPay",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingCreateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingCreateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BookingCreateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Payment/vnpay-return": {
      "get": {
        "tags": [
          "Payment"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Register": {
      "post": {
        "tags": [
          "Register"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "ConfirmPassword",
                  "Email",
                  "Name",
                  "Password",
                  "Phone",
                  "RoleName"
                ],
                "type": "object",
                "properties": {
                  "RoleName": {
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string"
                  },
                  "Name": {
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string"
                  },
                  "Phone": {
                    "maxLength": 20,
                    "minLength": 10,
                    "type": "string"
                  },
                  "Email": {
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string"
                  },
                  "Password": {
                    "maxLength": 255,
                    "minLength": 10,
                    "type": "string"
                  },
                  "ConfirmPassword": {
                    "type": "string"
                  },
                  "Dob": {
                    "type": "string",
                    "format": "date"
                  },
                  "ImageFile": {
                    "type": "string",
                    "format": "binary"
                  },
                  "FacId": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "format": "int32"
                  },
                  "StartTime": {
                    "type": "string",
                    "format": "date"
                  },
                  "EndTime": {
                    "type": "string",
                    "format": "date"
                  }
                }
              },
              "encoding": {
                "RoleName": {
                  "style": "form"
                },
                "Name": {
                  "style": "form"
                },
                "Phone": {
                  "style": "form"
                },
                "Email": {
                  "style": "form"
                },
                "Password": {
                  "style": "form"
                },
                "ConfirmPassword": {
                  "style": "form"
                },
                "Dob": {
                  "style": "form"
                },
                "ImageFile": {
                  "style": "form"
                },
                "FacId": {
                  "style": "form"
                },
                "StartTime": {
                  "style": "form"
                },
                "EndTime": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/RegulationFacility": {
      "get": {
        "tags": [
          "RegulationFacility"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "RegulationFacility"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegulationFacilityDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegulationFacilityDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegulationFacilityDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/RegulationFacility/{id}": {
      "get": {
        "tags": [
          "RegulationFacility"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "RegulationFacility"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegulationFacilityDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegulationFacilityDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegulationFacilityDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "RegulationFacility"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/RegulationFacility/facility/{facId}": {
      "get": {
        "tags": [
          "RegulationFacility"
        ],
        "parameters": [
          {
            "name": "facId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/RegulationFacility/search/{text}": {
      "get": {
        "tags": [
          "RegulationFacility"
        ],
        "parameters": [
          {
            "name": "text",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/RegulationSystem": {
      "get": {
        "tags": [
          "RegulationSystem"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "RegulationSystem"
        ],
        "summary": "Tạo regulation system : Admin",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegulationSystemDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegulationSystemDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegulationSystemDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/RegulationSystem/{id}": {
      "get": {
        "tags": [
          "RegulationSystem"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "RegulationSystem"
        ],
        "summary": "Sửa regulation system : Admin",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegulationSystemDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegulationSystemDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegulationSystemDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "RegulationSystem"
        ],
        "summary": "Xoá regulation system : Admin",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/RegulationSystem/search/{text}": {
      "get": {
        "tags": [
          "RegulationSystem"
        ],
        "parameters": [
          {
            "name": "text",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Service/GetAllService": {
      "get": {
        "tags": [
          "Service"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Service/GetServiceById/{id}": {
      "get": {
        "tags": [
          "Service"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Service/facility/{facilityId}": {
      "get": {
        "tags": [
          "Service"
        ],
        "parameters": [
          {
            "name": "facilityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Service/status/{status}": {
      "get": {
        "tags": [
          "Service"
        ],
        "parameters": [
          {
            "name": "status",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Service/Add/Service": {
      "post": {
        "tags": [
          "Service"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "FacId",
                  "Price",
                  "ServiceName",
                  "Status"
                ],
                "type": "object",
                "properties": {
                  "FacId": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "ServiceName": {
                    "maxLength": 200,
                    "minLength": 0,
                    "type": "string"
                  },
                  "Price": {
                    "minimum": 0,
                    "type": "number",
                    "format": "double"
                  },
                  "Status": {
                    "pattern": "^(Active|Inactive)$",
                    "type": "string"
                  },
                  "ImageFile": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Description": {
                    "maxLength": 1000,
                    "minLength": 0,
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "FacId": {
                  "style": "form"
                },
                "ServiceName": {
                  "style": "form"
                },
                "Price": {
                  "style": "form"
                },
                "Status": {
                  "style": "form"
                },
                "ImageFile": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Service/UpdateService/{id}": {
      "put": {
        "tags": [
          "Service"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "FacId": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "ServiceName": {
                    "maxLength": 200,
                    "minLength": 0,
                    "type": "string"
                  },
                  "Price": {
                    "minimum": 0,
                    "type": "number",
                    "format": "double"
                  },
                  "Status": {
                    "pattern": "^(Active|Inactive)$",
                    "type": "string"
                  },
                  "ImageFile": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Description": {
                    "maxLength": 1000,
                    "minLength": 0,
                    "type": "string"
                  },
                  "RemoveImage": {
                    "type": "boolean"
                  }
                }
              },
              "encoding": {
                "FacId": {
                  "style": "form"
                },
                "ServiceName": {
                  "style": "form"
                },
                "Price": {
                  "style": "form"
                },
                "Status": {
                  "style": "form"
                },
                "ImageFile": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "RemoveImage": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Service/DeleteService/{id}": {
      "delete": {
        "tags": [
          "Service"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Service/pagination": {
      "get": {
        "tags": [
          "Service"
        ],
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Service/order/add": {
      "post": {
        "tags": [
          "Service"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderServiceCreateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderServiceCreateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderServiceCreateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Service/order/{orderServiceId}/remove": {
      "delete": {
        "tags": [
          "Service"
        ],
        "parameters": [
          {
            "name": "orderServiceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Service/order/{orderId}/services": {
      "get": {
        "tags": [
          "Service"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Service/order/{orderServiceId}/update/Service/Quantity": {
      "put": {
        "tags": [
          "Service"
        ],
        "parameters": [
          {
            "name": "orderServiceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderServiceUpdateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderServiceUpdateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrderServiceUpdateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Staff/GetAll": {
      "get": {
        "tags": [
          "Staff"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Staff/by-facility/{facilityId}": {
      "get": {
        "tags": [
          "Staff"
        ],
        "summary": "Lấy thông tin Staff của sân nào đó  : Field Owner",
        "parameters": [
          {
            "name": "facilityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Staff/{uId}": {
      "get": {
        "tags": [
          "Staff"
        ],
        "parameters": [
          {
            "name": "uId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "Staff"
        ],
        "summary": "Update thông tin Staff  : Field Owner",
        "parameters": [
          {
            "name": "uId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Email": {
                    "type": "string",
                    "format": "email"
                  },
                  "Status": {
                    "type": "string"
                  },
                  "Name": {
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string"
                  },
                  "Phone": {
                    "maxLength": 20,
                    "minLength": 10,
                    "type": "string",
                    "format": "tel"
                  },
                  "Dob": {
                    "type": "string",
                    "format": "date"
                  },
                  "ImageFile": {
                    "type": "string",
                    "format": "binary"
                  },
                  "RemoveImage": {
                    "type": "boolean"
                  },
                  "FacId": {
                    "maximum": 2147483647,
                    "minimum": 1,
                    "type": "integer",
                    "format": "int32"
                  },
                  "StartTime": {
                    "type": "string",
                    "format": "date"
                  },
                  "EndTime": {
                    "type": "string",
                    "format": "date"
                  }
                }
              },
              "encoding": {
                "Email": {
                  "style": "form"
                },
                "Status": {
                  "style": "form"
                },
                "Name": {
                  "style": "form"
                },
                "Phone": {
                  "style": "form"
                },
                "Dob": {
                  "style": "form"
                },
                "ImageFile": {
                  "style": "form"
                },
                "RemoveImage": {
                  "style": "form"
                },
                "FacId": {
                  "style": "form"
                },
                "StartTime": {
                  "style": "form"
                },
                "EndTime": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Staff"
        ],
        "summary": "Xoá Staff  : Field Owner",
        "parameters": [
          {
            "name": "uId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Staff/field-owner/{fieldOwnerId}": {
      "get": {
        "tags": [
          "Staff"
        ],
        "parameters": [
          {
            "name": "fieldOwnerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BookingCreateDTO": {
        "required": [
          "selectedSlotIds"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "title": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "selectedSlotIds": {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "fieldId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "facilityId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "guestName": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "guestPhone": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "serviceIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "discountId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BookingDto": {
        "type": "object",
        "properties": {
          "bookingId": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "guestName": {
            "type": "string",
            "nullable": true
          },
          "guestPhone": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "statusPayment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CategoryFieldDto": {
        "type": "object",
        "properties": {
          "categoryFieldId": {
            "type": "integer",
            "format": "int32"
          },
          "categoryFieldName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateAccountDto": {
        "required": [
          "email",
          "name",
          "password",
          "roleId"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "password": {
            "minLength": 6,
            "type": "string"
          },
          "roleId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "facilityId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "startTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "image": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DiscountDto": {
        "type": "object",
        "properties": {
          "facId": {
            "type": "integer",
            "format": "int32"
          },
          "discountPercentage": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FieldBookingScheduleByDateDto": {
        "type": "object",
        "properties": {
          "facilityId": {
            "type": "integer",
            "format": "int32"
          },
          "facilityName": {
            "type": "string",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldWithSchedulesDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FieldBookingScheduleByDateDtoServiceResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/FieldBookingScheduleByDateDto"
          }
        },
        "additionalProperties": false
      },
      "FieldBookingScheduleDeleteGenerateDto": {
        "required": [
          "endDate",
          "fieldId",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "fieldId": {
            "type": "integer",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          }
        },
        "additionalProperties": false
      },
      "FieldBookingScheduleDto": {
        "type": "object",
        "properties": {
          "scheduleId": {
            "type": "integer",
            "format": "int32"
          },
          "fieldId": {
            "type": "integer",
            "format": "int32"
          },
          "bookingId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "startTime": {
            "type": "string",
            "format": "time"
          },
          "endTime": {
            "type": "string",
            "format": "time"
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FieldBookingScheduleGenerateDto": {
        "required": [
          "dailyEndTime",
          "dailyStartTime",
          "endDate",
          "fieldId",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "fieldId": {
            "type": "integer",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "dailyStartTime": {
            "type": "string",
            "format": "time"
          },
          "dailyEndTime": {
            "type": "string",
            "format": "time"
          },
          "notes": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FieldBookingScheduleUpdateGenerateDto": {
        "required": [
          "dailyEndTime",
          "dailyStartTime",
          "endDate",
          "fieldId",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "fieldId": {
            "type": "integer",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "dailyStartTime": {
            "type": "string",
            "format": "time"
          },
          "dailyEndTime": {
            "type": "string",
            "format": "time"
          },
          "notes": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FieldCreateDTO": {
        "required": [
          "categoryId",
          "facId",
          "fieldName"
        ],
        "type": "object",
        "properties": {
          "fieldName": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "facId": {
            "type": "integer",
            "format": "int32"
          },
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isBookingEnable": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "FieldPricingCreateDto": {
        "required": [
          "endTime",
          "fieldId",
          "price",
          "startTime"
        ],
        "type": "object",
        "properties": {
          "fieldId": {
            "type": "integer",
            "format": "int32"
          },
          "startTime": {
            "type": "string",
            "format": "time"
          },
          "endTime": {
            "type": "string",
            "format": "time"
          },
          "price": {
            "minimum": 0.01,
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "FieldPricingDto": {
        "type": "object",
        "properties": {
          "pricingId": {
            "type": "integer",
            "format": "int32"
          },
          "fieldId": {
            "type": "integer",
            "format": "int32"
          },
          "startTime": {
            "type": "string",
            "format": "time"
          },
          "endTime": {
            "type": "string",
            "format": "time"
          },
          "price": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "FieldPricingUpdateDto": {
        "type": "object",
        "properties": {
          "startTime": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "endTime": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "price": {
            "minimum": 0.01,
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FieldUpdateDTO": {
        "type": "object",
        "properties": {
          "fieldName": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "categoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isBookingEnable": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FieldWithSchedulesDto": {
        "type": "object",
        "properties": {
          "fieldId": {
            "type": "integer",
            "format": "int32"
          },
          "fieldName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isBookingEnable": {
            "type": "boolean",
            "nullable": true
          },
          "category": {
            "$ref": "#/components/schemas/CategoryFieldDto"
          },
          "schedules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduleDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ForgotPasswordDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoginDTO": {
        "type": "object",
        "properties": {
          "uEmail": {
            "type": "string",
            "nullable": true
          },
          "uPassword": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LogoutDTO": {
        "required": [
          "uId"
        ],
        "type": "object",
        "properties": {
          "uId": {
            "type": "integer",
            "format": "int32"
          },
          "token": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrderServiceCreateDTO": {
        "required": [
          "orderId",
          "quantity",
          "serviceId"
        ],
        "type": "object",
        "properties": {
          "orderId": {
            "type": "integer",
            "format": "int32"
          },
          "serviceId": {
            "type": "integer",
            "format": "int32"
          },
          "quantity": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "OrderServiceUpdateDTO": {
        "type": "object",
        "properties": {
          "quantity": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegulationFacilityDto": {
        "type": "object",
        "properties": {
          "facId": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegulationSystemDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ScheduleDto": {
        "type": "object",
        "properties": {
          "scheduleId": {
            "type": "integer",
            "format": "int32"
          },
          "bookingId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "startTime": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "endTime": {
            "type": "string",
            "format": "time",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "booking": {
            "$ref": "#/components/schemas/BookingDto"
          }
        },
        "additionalProperties": false
      },
      "VerifyCodeDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "newPassword": {
            "type": "string",
            "nullable": true
          },
          "confirmPassword": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}