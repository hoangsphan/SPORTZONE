// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SportZone_API.Models;

#nullable disable

namespace SportZone_API.Migrations
{
    [DbContext(typeof(SportZoneContext))]
    [Migration("20251028145620_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SportZone_API.Models.Admin", b =>
                {
                    b.Property<int>("UId")
                        .HasColumnType("int")
                        .HasColumnName("u_id");

                    b.Property<DateOnly?>("Dob")
                        .HasColumnType("date")
                        .HasColumnName("dob");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("phone");

                    b.HasKey("UId")
                        .HasName("PK__Admin__B51D3DEA39292CB8");

                    b.ToTable("Admin", (string)null);
                });

            modelBuilder.Entity("SportZone_API.Models.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("booking_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<DateTime?>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<TimeOnly?>("EndTime")
                        .HasColumnType("time")
                        .HasColumnName("end_time");

                    b.Property<int>("FieldId")
                        .HasColumnType("int")
                        .HasColumnName("field_id");

                    b.Property<string>("GuestName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("guest_name");

                    b.Property<string>("GuestPhone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("guest_phone");

                    b.Property<TimeOnly?>("StartTime")
                        .HasColumnType("time")
                        .HasColumnName("start_time");

                    b.Property<string>("Status")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("status");

                    b.Property<string>("StatusPayment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status_payment");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("title");

                    b.Property<int?>("UId")
                        .HasColumnType("int")
                        .HasColumnName("u_id");

                    b.HasKey("BookingId")
                        .HasName("PK__Booking__5DE3A5B1C8E67B89");

                    b.HasIndex("FieldId");

                    b.HasIndex("UId");

                    b.ToTable("Booking", (string)null);
                });

            modelBuilder.Entity("SportZone_API.Models.CategoryField", b =>
                {
                    b.Property<int>("CategoryFieldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("category_field_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryFieldId"));

                    b.Property<string>("CategoryFieldName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Category_field_name");

                    b.HasKey("CategoryFieldId")
                        .HasName("PK__Category__6A073F0901A6D904");

                    b.HasIndex(new[] { "CategoryFieldName" }, "UQ__Category__A8D2A98070E7D032")
                        .IsUnique()
                        .HasFilter("[Category_field_name] IS NOT NULL");

                    b.ToTable("Category_field", (string)null);
                });

            modelBuilder.Entity("SportZone_API.Models.Customer", b =>
                {
                    b.Property<int>("UId")
                        .HasColumnType("int")
                        .HasColumnName("u_id");

                    b.Property<DateOnly?>("Dob")
                        .HasColumnType("date")
                        .HasColumnName("dob");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("phone");

                    b.HasKey("UId")
                        .HasName("PK__Customer__B51D3DEA7606EDE3");

                    b.ToTable("Customer", (string)null);
                });

            modelBuilder.Entity("SportZone_API.Models.Discount", b =>
                {
                    b.Property<int>("DiscountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("discount_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiscountId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<decimal?>("DiscountPercentage")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("discount_percentage");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("end_date");

                    b.Property<int>("FacId")
                        .HasColumnType("int")
                        .HasColumnName("fac_id");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("start_date");

                    b.HasKey("DiscountId")
                        .HasName("PK__Discount__BDBE9EF97A91F459");

                    b.HasIndex("FacId");

                    b.ToTable("Discount", (string)null);
                });

            modelBuilder.Entity("SportZone_API.Models.ExternalLogin", b =>
                {
                    b.Property<int>("UId")
                        .HasColumnType("int")
                        .HasColumnName("u_id");

                    b.Property<string>("AccessToken")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("access_token");

                    b.Property<string>("ExternalProvider")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("external_provider");

                    b.Property<string>("ExternalUserId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("external_user_id");

                    b.HasKey("UId")
                        .HasName("PK__External__B51D3DEAEC6BFCA3");

                    b.ToTable("External_Logins", (string)null);
                });

            modelBuilder.Entity("SportZone_API.Models.Facility", b =>
                {
                    b.Property<int>("FacId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("fac_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FacId"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("address");

                    b.Property<TimeOnly?>("CloseTime")
                        .HasColumnType("time")
                        .HasColumnName("close_time");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<TimeOnly?>("OpenTime")
                        .HasColumnType("time")
                        .HasColumnName("open_time");

                    b.Property<string>("Subdescription")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("subdescription");

                    b.Property<int>("UId")
                        .HasColumnType("int")
                        .HasColumnName("u_id");

                    b.HasKey("FacId")
                        .HasName("PK__Facility__978BA2C362C4F885");

                    b.HasIndex("UId");

                    b.ToTable("Facility", (string)null);
                });

            modelBuilder.Entity("SportZone_API.Models.Field", b =>
                {
                    b.Property<int>("FieldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("field_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FieldId"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int?>("FacId")
                        .HasColumnType("int")
                        .HasColumnName("fac_id");

                    b.Property<string>("FieldName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("field_name");

                    b.Property<bool?>("IsBookingEnable")
                        .HasColumnType("bit")
                        .HasColumnName("is_booking_enable");

                    b.HasKey("FieldId")
                        .HasName("PK__Field__1BB6F43EB8A4DC8B");

                    b.HasIndex("CategoryId");

                    b.HasIndex("FacId");

                    b.ToTable("Field", (string)null);
                });

            modelBuilder.Entity("SportZone_API.Models.FieldBookingSchedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("schedule_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleId"));

                    b.Property<int?>("BookingId")
                        .HasColumnType("int")
                        .HasColumnName("booking_id");

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<TimeOnly?>("EndTime")
                        .HasColumnType("time")
                        .HasColumnName("end_time");

                    b.Property<int?>("FieldId")
                        .HasColumnType("int")
                        .HasColumnName("field_id");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("notes");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("price");

                    b.Property<TimeOnly?>("StartTime")
                        .HasColumnType("time")
                        .HasColumnName("start_time");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.HasKey("ScheduleId")
                        .HasName("PK__Field_bo__C46A8A6FA3713F4D");

                    b.HasIndex("BookingId");

                    b.HasIndex("FieldId");

                    b.ToTable("Field_booking_schedule", (string)null);
                });

            modelBuilder.Entity("SportZone_API.Models.FieldOwner", b =>
                {
                    b.Property<int>("UId")
                        .HasColumnType("int")
                        .HasColumnName("u_id");

                    b.Property<DateOnly?>("Dob")
                        .HasColumnType("date")
                        .HasColumnName("dob");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("phone");

                    b.HasKey("UId")
                        .HasName("PK__Field_Ow__B51D3DEAF8FDD380");

                    b.ToTable("Field_Owner", (string)null);
                });

            modelBuilder.Entity("SportZone_API.Models.FieldPricing", b =>
                {
                    b.Property<int>("PricingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pricing_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PricingId"));

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time")
                        .HasColumnName("end_time");

                    b.Property<int>("FieldId")
                        .HasColumnType("int")
                        .HasColumnName("field_id");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("price");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time")
                        .HasColumnName("start_time");

                    b.HasKey("PricingId")
                        .HasName("PK__Field_Pr__A25A9FB7AF6DFA21");

                    b.HasIndex("FieldId");

                    b.ToTable("Field_Pricing", (string)null);
                });

            modelBuilder.Entity("SportZone_API.Models.Image", b =>
                {
                    b.Property<int>("ImgId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("img_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImgId"));

                    b.Property<int?>("FacId")
                        .HasColumnType("int")
                        .HasColumnName("fac_id");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("imageURL");

                    b.HasKey("ImgId")
                        .HasName("PK__Image__6F16A71C69A168F6");

                    b.HasIndex("FacId");

                    b.ToTable("Image", (string)null);
                });

            modelBuilder.Entity("SportZone_API.Models.Notification", b =>
                {
                    b.Property<int>("NotiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("noti_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotiId"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("content");

                    b.Property<DateTime?>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsRead")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("is_read");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("type");

                    b.Property<int>("UId")
                        .HasColumnType("int")
                        .HasColumnName("u_id");

                    b.HasKey("NotiId")
                        .HasName("PK__Notifica__FDA4F30A6812B713");

                    b.HasIndex("UId");

                    b.ToTable("Notification", (string)null);
                });

            modelBuilder.Entity("SportZone_API.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int?>("BookingId")
                        .HasColumnType("int")
                        .HasColumnName("booking_id");

                    b.Property<string>("ContentPayment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("content_payment");

                    b.Property<DateTime?>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("DiscountId")
                        .HasColumnType("int")
                        .HasColumnName("discount_id");

                    b.Property<int>("FacId")
                        .HasColumnType("int")
                        .HasColumnName("fac_id");

                    b.Property<string>("GuestName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("guest_name");

                    b.Property<string>("GuestPhone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("guest_phone");

                    b.Property<string>("StatusPayment")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status_payment");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("total_price");

                    b.Property<decimal?>("TotalServicePrice")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("total_service_price");

                    b.Property<int?>("UId")
                        .HasColumnType("int")
                        .HasColumnName("u_id");

                    b.HasKey("OrderId")
                        .HasName("PK__Order__46596229BA7F108B");

                    b.HasIndex("BookingId");

                    b.HasIndex("DiscountId");

                    b.HasIndex("FacId");

                    b.HasIndex("UId");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("SportZone_API.Models.OrderFieldId", b =>
                {
                    b.Property<int>("OrderFieldId1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("order_field_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderFieldId1"));

                    b.Property<int?>("FieldId")
                        .HasColumnType("int")
                        .HasColumnName("field_id");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.HasKey("OrderFieldId1")
                        .HasName("PK__Order_fi__3E76E2B5F30E7607");

                    b.HasIndex("FieldId");

                    b.HasIndex("OrderId");

                    b.ToTable("Order_field_id", (string)null);
                });

            modelBuilder.Entity("SportZone_API.Models.OrderService", b =>
                {
                    b.Property<int>("OrderServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("order_service_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderServiceId"));

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("price");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<int?>("ServiceId")
                        .HasColumnType("int")
                        .HasColumnName("service_id");

                    b.HasKey("OrderServiceId")
                        .HasName("PK__Order_Se__88196EDD1C9AD496");

                    b.HasIndex("OrderId");

                    b.HasIndex("ServiceId");

                    b.ToTable("Order_Service", (string)null);
                });

            modelBuilder.Entity("SportZone_API.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("payment_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<string>("AccountName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("account_name");

                    b.Property<string>("BankCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("bank_code");

                    b.Property<string>("BankNum")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("bank_num");

                    b.Property<string>("ImageQr")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("image_qr");

                    b.Property<int>("UId")
                        .HasColumnType("int")
                        .HasColumnName("u_id");

                    b.HasKey("PaymentId")
                        .HasName("PK__Payment__ED1FC9EAE0436C99");

                    b.HasIndex("UId");

                    b.ToTable("Payment", (string)null);
                });

            modelBuilder.Entity("SportZone_API.Models.RegulationFacility", b =>
                {
                    b.Property<int>("RegulationFacilityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("regulation_facility_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RegulationFacilityId"));

                    b.Property<DateTime?>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int>("FacId")
                        .HasColumnType("int")
                        .HasColumnName("fac_id");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValue("Active")
                        .HasColumnName("status");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("title");

                    b.Property<DateTime?>("UpdateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("update_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("RegulationFacilityId")
                        .HasName("PK__Regulati__B2AC1BDDE720DDB2");

                    b.HasIndex("FacId");

                    b.ToTable("RegulationFacility", (string)null);
                });

            modelBuilder.Entity("SportZone_API.Models.RegulationSystem", b =>
                {
                    b.Property<int>("RegulationSystemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("regulation_system_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RegulationSystemId"));

                    b.Property<DateTime?>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValue("Active")
                        .HasColumnName("status");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("title");

                    b.Property<DateTime?>("UpdateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("update_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("RegulationSystemId")
                        .HasName("PK__Regulati__A01CA95F4FD41EDC");

                    b.ToTable("RegulationSystem", (string)null);
                });

            modelBuilder.Entity("SportZone_API.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("role_name");

                    b.HasKey("RoleId")
                        .HasName("PK__Role__760965CC612A6DE8");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("SportZone_API.Models.Service", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("service_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int?>("FacId")
                        .HasColumnType("int")
                        .HasColumnName("fac_id");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("image");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("price");

                    b.Property<string>("ServiceName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("service_name");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("status");

                    b.HasKey("ServiceId")
                        .HasName("PK__Service__3E0DB8AF711966B6");

                    b.HasIndex("FacId");

                    b.ToTable("Service", (string)null);
                });

            modelBuilder.Entity("SportZone_API.Models.Staff", b =>
                {
                    b.Property<int>("UId")
                        .HasColumnType("int")
                        .HasColumnName("u_id");

                    b.Property<DateOnly?>("Dob")
                        .HasColumnType("date")
                        .HasColumnName("dob");

                    b.Property<DateOnly?>("EndTime")
                        .HasColumnType("date")
                        .HasColumnName("end_time");

                    b.Property<int?>("FacId")
                        .HasColumnType("int")
                        .HasColumnName("fac_id");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("image");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("phone");

                    b.Property<DateOnly?>("StartTime")
                        .HasColumnType("date")
                        .HasColumnName("start_time");

                    b.HasKey("UId")
                        .HasName("PK__Staff__B51D3DEAED68D5BF");

                    b.HasIndex("FacId");

                    b.ToTable("Staff");
                });

            modelBuilder.Entity("SportZone_API.Models.User", b =>
                {
                    b.Property<int>("UId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("u_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UId"));

                    b.Property<bool?>("IsExternalLogin")
                        .HasColumnType("bit")
                        .HasColumnName("is_external_login");

                    b.Property<bool?>("IsVerify")
                        .HasColumnType("bit")
                        .HasColumnName("is_verify");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.Property<DateTime?>("UCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("u_create_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("u_email");

                    b.Property<string>("UPassword")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("u_password");

                    b.Property<string>("UStatus")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("u_status");

                    b.HasKey("UId")
                        .HasName("PK__User__B51D3DEA087664AB");

                    b.HasIndex("RoleId");

                    b.HasIndex(new[] { "UEmail" }, "UQ__User__3DF9EF22FFECCFC7")
                        .IsUnique()
                        .HasFilter("[u_email] IS NOT NULL");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("SportZone_API.Models.Admin", b =>
                {
                    b.HasOne("SportZone_API.Models.User", "UIdNavigation")
                        .WithOne("Admin")
                        .HasForeignKey("SportZone_API.Models.Admin", "UId")
                        .IsRequired()
                        .HasConstraintName("FK__Admin__u_id__00200768");

                    b.Navigation("UIdNavigation");
                });

            modelBuilder.Entity("SportZone_API.Models.Booking", b =>
                {
                    b.HasOne("SportZone_API.Models.Field", "Field")
                        .WithMany("Bookings")
                        .HasForeignKey("FieldId")
                        .IsRequired()
                        .HasConstraintName("FK__Booking__field_i__01142BA1");

                    b.HasOne("SportZone_API.Models.User", "UIdNavigation")
                        .WithMany("Bookings")
                        .HasForeignKey("UId")
                        .HasConstraintName("FK__Booking__u_id__02084FDA");

                    b.Navigation("Field");

                    b.Navigation("UIdNavigation");
                });

            modelBuilder.Entity("SportZone_API.Models.Customer", b =>
                {
                    b.HasOne("SportZone_API.Models.User", "UIdNavigation")
                        .WithOne("Customer")
                        .HasForeignKey("SportZone_API.Models.Customer", "UId")
                        .IsRequired()
                        .HasConstraintName("FK__Customer__u_id__02FC7413");

                    b.Navigation("UIdNavigation");
                });

            modelBuilder.Entity("SportZone_API.Models.Discount", b =>
                {
                    b.HasOne("SportZone_API.Models.Facility", "Fac")
                        .WithMany("Discounts")
                        .HasForeignKey("FacId")
                        .IsRequired()
                        .HasConstraintName("FK__Discount__fac_id__03F0984C");

                    b.Navigation("Fac");
                });

            modelBuilder.Entity("SportZone_API.Models.ExternalLogin", b =>
                {
                    b.HasOne("SportZone_API.Models.User", "UIdNavigation")
                        .WithOne("ExternalLogin")
                        .HasForeignKey("SportZone_API.Models.ExternalLogin", "UId")
                        .IsRequired()
                        .HasConstraintName("FK__External_L__u_id__04E4BC85");

                    b.Navigation("UIdNavigation");
                });

            modelBuilder.Entity("SportZone_API.Models.Facility", b =>
                {
                    b.HasOne("SportZone_API.Models.FieldOwner", "UIdNavigation")
                        .WithMany("Facilities")
                        .HasForeignKey("UId")
                        .IsRequired()
                        .HasConstraintName("FK__Facility__u_id__05D8E0BE");

                    b.Navigation("UIdNavigation");
                });

            modelBuilder.Entity("SportZone_API.Models.Field", b =>
                {
                    b.HasOne("SportZone_API.Models.CategoryField", "Category")
                        .WithMany("Fields")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK__Field__category___06CD04F7");

                    b.HasOne("SportZone_API.Models.Facility", "Fac")
                        .WithMany("Fields")
                        .HasForeignKey("FacId")
                        .HasConstraintName("FK__Field__fac_id__07C12930");

                    b.Navigation("Category");

                    b.Navigation("Fac");
                });

            modelBuilder.Entity("SportZone_API.Models.FieldBookingSchedule", b =>
                {
                    b.HasOne("SportZone_API.Models.Booking", "Booking")
                        .WithMany("FieldBookingSchedules")
                        .HasForeignKey("BookingId")
                        .HasConstraintName("FK__Field_boo__booki__08B54D69");

                    b.HasOne("SportZone_API.Models.Field", "Field")
                        .WithMany("FieldBookingSchedules")
                        .HasForeignKey("FieldId")
                        .HasConstraintName("FK__Field_boo__field__09A971A2");

                    b.Navigation("Booking");

                    b.Navigation("Field");
                });

            modelBuilder.Entity("SportZone_API.Models.FieldOwner", b =>
                {
                    b.HasOne("SportZone_API.Models.User", "UIdNavigation")
                        .WithOne("FieldOwner")
                        .HasForeignKey("SportZone_API.Models.FieldOwner", "UId")
                        .IsRequired()
                        .HasConstraintName("FK__Field_Owne__u_id__0A9D95DB");

                    b.Navigation("UIdNavigation");
                });

            modelBuilder.Entity("SportZone_API.Models.FieldPricing", b =>
                {
                    b.HasOne("SportZone_API.Models.Field", "Field")
                        .WithMany("FieldPricings")
                        .HasForeignKey("FieldId")
                        .IsRequired()
                        .HasConstraintName("FK__Field_Pri__field__0B91BA14");

                    b.Navigation("Field");
                });

            modelBuilder.Entity("SportZone_API.Models.Image", b =>
                {
                    b.HasOne("SportZone_API.Models.Facility", "Fac")
                        .WithMany("Images")
                        .HasForeignKey("FacId")
                        .HasConstraintName("FK__Image__fac_id__0C85DE4D");

                    b.Navigation("Fac");
                });

            modelBuilder.Entity("SportZone_API.Models.Notification", b =>
                {
                    b.HasOne("SportZone_API.Models.User", "UIdNavigation")
                        .WithMany("Notifications")
                        .HasForeignKey("UId")
                        .IsRequired()
                        .HasConstraintName("FK__Notificati__u_id__0D7A0286");

                    b.Navigation("UIdNavigation");
                });

            modelBuilder.Entity("SportZone_API.Models.Order", b =>
                {
                    b.HasOne("SportZone_API.Models.Booking", "Booking")
                        .WithMany("Orders")
                        .HasForeignKey("BookingId")
                        .HasConstraintName("FK__Order__booking_i__0E6E26BF");

                    b.HasOne("SportZone_API.Models.Discount", "Discount")
                        .WithMany("Orders")
                        .HasForeignKey("DiscountId")
                        .HasConstraintName("FK__Order__discount___0F624AF8");

                    b.HasOne("SportZone_API.Models.Facility", "Fac")
                        .WithMany("Orders")
                        .HasForeignKey("FacId")
                        .IsRequired()
                        .HasConstraintName("FK__Order__fac_id__10566F31");

                    b.HasOne("SportZone_API.Models.User", "UIdNavigation")
                        .WithMany("Orders")
                        .HasForeignKey("UId")
                        .HasConstraintName("FK__Order__u_id__114A936A");

                    b.Navigation("Booking");

                    b.Navigation("Discount");

                    b.Navigation("Fac");

                    b.Navigation("UIdNavigation");
                });

            modelBuilder.Entity("SportZone_API.Models.OrderFieldId", b =>
                {
                    b.HasOne("SportZone_API.Models.Field", "Field")
                        .WithMany("OrderFieldIds")
                        .HasForeignKey("FieldId")
                        .HasConstraintName("FK__Order_fie__field__123EB7A3");

                    b.HasOne("SportZone_API.Models.Order", "Order")
                        .WithMany("OrderFieldIds")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__Order_fie__order__1332DBDC");

                    b.Navigation("Field");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("SportZone_API.Models.OrderService", b =>
                {
                    b.HasOne("SportZone_API.Models.Order", "Order")
                        .WithMany("OrderServices")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__Order_Ser__order__14270015");

                    b.HasOne("SportZone_API.Models.Service", "Service")
                        .WithMany("OrderServices")
                        .HasForeignKey("ServiceId")
                        .HasConstraintName("FK__Order_Ser__servi__151B244E");

                    b.Navigation("Order");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("SportZone_API.Models.Payment", b =>
                {
                    b.HasOne("SportZone_API.Models.User", "UIdNavigation")
                        .WithMany("Payments")
                        .HasForeignKey("UId")
                        .IsRequired()
                        .HasConstraintName("FK__Payment__u_id__160F4887");

                    b.Navigation("UIdNavigation");
                });

            modelBuilder.Entity("SportZone_API.Models.RegulationFacility", b =>
                {
                    b.HasOne("SportZone_API.Models.Facility", "Fac")
                        .WithMany("RegulationFacilities")
                        .HasForeignKey("FacId")
                        .IsRequired()
                        .HasConstraintName("FK__Regulatio__fac_i__17036CC0");

                    b.Navigation("Fac");
                });

            modelBuilder.Entity("SportZone_API.Models.Service", b =>
                {
                    b.HasOne("SportZone_API.Models.Facility", "Fac")
                        .WithMany("Services")
                        .HasForeignKey("FacId")
                        .HasConstraintName("FK__Service__fac_id__17F790F9");

                    b.Navigation("Fac");
                });

            modelBuilder.Entity("SportZone_API.Models.Staff", b =>
                {
                    b.HasOne("SportZone_API.Models.Facility", "Fac")
                        .WithMany("Staff")
                        .HasForeignKey("FacId")
                        .HasConstraintName("FK__Staff__fac_id__18EBB532");

                    b.HasOne("SportZone_API.Models.User", "UIdNavigation")
                        .WithOne("Staff")
                        .HasForeignKey("SportZone_API.Models.Staff", "UId")
                        .IsRequired()
                        .HasConstraintName("FK__Staff__u_id__19DFD96B");

                    b.Navigation("Fac");

                    b.Navigation("UIdNavigation");
                });

            modelBuilder.Entity("SportZone_API.Models.User", b =>
                {
                    b.HasOne("SportZone_API.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK__User__role_id__1AD3FDA4");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SportZone_API.Models.Booking", b =>
                {
                    b.Navigation("FieldBookingSchedules");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("SportZone_API.Models.CategoryField", b =>
                {
                    b.Navigation("Fields");
                });

            modelBuilder.Entity("SportZone_API.Models.Discount", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("SportZone_API.Models.Facility", b =>
                {
                    b.Navigation("Discounts");

                    b.Navigation("Fields");

                    b.Navigation("Images");

                    b.Navigation("Orders");

                    b.Navigation("RegulationFacilities");

                    b.Navigation("Services");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("SportZone_API.Models.Field", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("FieldBookingSchedules");

                    b.Navigation("FieldPricings");

                    b.Navigation("OrderFieldIds");
                });

            modelBuilder.Entity("SportZone_API.Models.FieldOwner", b =>
                {
                    b.Navigation("Facilities");
                });

            modelBuilder.Entity("SportZone_API.Models.Order", b =>
                {
                    b.Navigation("OrderFieldIds");

                    b.Navigation("OrderServices");
                });

            modelBuilder.Entity("SportZone_API.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("SportZone_API.Models.Service", b =>
                {
                    b.Navigation("OrderServices");
                });

            modelBuilder.Entity("SportZone_API.Models.User", b =>
                {
                    b.Navigation("Admin");

                    b.Navigation("Bookings");

                    b.Navigation("Customer");

                    b.Navigation("ExternalLogin");

                    b.Navigation("FieldOwner");

                    b.Navigation("Notifications");

                    b.Navigation("Orders");

                    b.Navigation("Payments");

                    b.Navigation("Staff");
                });
#pragma warning restore 612, 618
        }
    }
}
